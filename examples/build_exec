#!/bin/bash

set -e

if test $# -ne 5; then
    echo "Usage: $0 <CLI_EXECUTABLE> <CLI_PATH> <GEM_NAME> <GEM_VERSION> <DIR_TMP>" 1>&2
    exit 1
fi

CLI_EXECUTABLE=$1
CLI_PATH=$(realpath $2)
GEM_NAME=$3
GEM_VERSION=$4
DIR_TMP=$(realpath $5)

echo "Building: $(basename $CLI_EXECUTABLE)"

# tebako compilation
tebako_env=$DIR_TMP/tebako-env
# project files (gem)
tebako_root=$DIR_TMP/tebako-root
# only provide the name, not path
tebako_entry=$(basename $CLI_PATH)
tebako_output=$CLI_EXECUTABLE

container_tag=alpine-3.17
#container_tag=ubuntu-20.04

gem install tebako
mkdir -p $tebako_env $tebako_root
(cd $tebako_root && gem fetch $GEM_NAME:$GEM_VERSION)
case $(uname -s) in
Darwin)
    brew update
    # install tools
    brew install bash binutils bison flex gnu-sed lz4 pkg-config xz
    # install libs
    brew install boost double-conversion fmt gdbm glog jemalloc libevent libffi libsodium libyaml ncurses openssl@3 zlib
    # make sure tools are reachable
    export PATH=/opt/homebrew/opt/flex/bin:/opt/homebrew/opt/bison/bin:$PATH
    # remove binutils from path so that macos `ar` is used
    export PATH=$(echo $PATH|tr : \\n|grep -v /binutils/|tr \\n :)
    ;;
Linux)
    tebako_root=/mnt/w
    tebako_prefix="podman run -it --rm -v $PWD:$tebako_root ghcr.io/tamatebako/tebako-${container_tag}:0.8.6"
    tebako_opts=--patchelf
    tebako_output=$tebako_root/$(basename $CLI_EXECUTABLE)
    ;;
LinuxLocal)
    dnf module reset ruby
    dnf module install ruby:3.3
    dnf install -y cmake git bash sudo autoconf boost-devel flex bison make clang binutils-devel libevent-devel libacl-devel sed python3 pkgconfig curl lz4-devel openssl-devel zlib-devel xz zip unzip tar xz-devel elfutils-devel libffi-devel gdbm-devel ncurses-devel readline-devel ruby-devel gettext-devel brotli-devel clang libxslt-devel
    echo TODO
    exit 1
    dnf install 
    ;;
*)
    echo "This OS is not supported." >&2
    exit 1
    ;;
esac
set -x
exec $tebako_prefix tebako press --root=$tebako_root --entry-point=$tebako_entry --output=$tebako_output --prefix=$tebako_env $tebako_opts
