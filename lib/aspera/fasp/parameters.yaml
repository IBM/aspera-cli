---
remote_password:
  :cltype: :envvar
  :clvarname: ASPERA_SCP_PASS
  :desc: SSH session password
token:
  :cltype: :envvar
  :clvarname: ASPERA_SCP_TOKEN
  :desc: 'Authorization token: Bearer, Basic or ATM (Also arg -W)'
cookie:
  :cltype: :envvar
  :clvarname: ASPERA_SCP_COOKIE
  :desc: Metadata for transfer (older,string)
ssh_private_key:
  :cltype: :envvar
  :clvarname: ASPERA_SCP_KEY
  :context:
  - :local
  :desc: "Private key used for SSH authentication.\n
   Shall look like: -----BEGIN RSA PRIVATE KEY-----\\nMII...\n
   Note the JSON encoding: \\n for newlines."
EX_at_rest_password:
  :cltype: :envvar
  :clvarname: ASPERA_SCP_FILEPASS
  :context:
  - :local
  :desc: Passphrase used for at rest encryption or decryption
EX_proxy_password:
  :cltype: :envvar
  :clvarname: ASPERA_PROXY_PASS
  :context:
  - :local
  :desc: "Password used for Aspera proxy server authentication.\n
May be overridden by password in URL EX_fasp_proxy_url."
EX_license_text:
  :cltype: :envvar
  :clvarname: ASPERA_SCP_LICENSE
  :context:
  - :local
  :desc: "License file text override.\nBy default ascp looks for license file near executable."
create_dir:
  :cltype: :opt_without_arg
  :option_switch: "-d"
  :accepted_types: :bool
  :desc: Specifies whether to create new directories.
precalculate_job_size:
  :cltype: :opt_without_arg
  :accepted_types: :bool
  :desc: Specifies whether to precalculate the job size.
keepalive:
  :cltype: :opt_without_arg
  :context:
  - :none
delete_before_transfer:
  :cltype: :opt_without_arg
preserve_access_time:
  :cltype: :opt_without_arg
preserve_creation_time:
  :cltype: :opt_without_arg
preserve_times:
  :cltype: :opt_without_arg
preserve_modification_time:
  :cltype: :opt_without_arg
remove_empty_directories:
  :cltype: :opt_without_arg
  :accepted_types: :bool
  :context:
  - :local
  - :node
  :desc: Specifies whether to remove empty directories.
remove_after_transfer:
  :cltype: :opt_without_arg
  :accepted_types: :bool
  :context:
  - :local
  - :node
  :desc: Remove SRC files after transfer success
remove_empty_source_directory:
  :cltype: :opt_without_arg
cipher:
  :cltype: :opt_with_arg
  :option_switch: "-c"
  :encode: Aspera::Fasp::Parameters
  :default: none
  :desc: "In transit encryption type.\nnone, aes-128, aes-256"
resume_policy:
  :cltype: :opt_with_arg
  :option_switch: "-k"
  :default: faspmgr:none;other:sparse_csum
  :translate_values:
    none: 0
    attrs: 1
    sparse_csum: 2
    full_csum: 3
  :desc: none,attrs,sparse_csum,full_csum
direction:
  :cltype: :opt_with_arg
  :option_switch: "--mode"
  :translate_values:
    receive: recv
    send: send
  :required: true
  :desc: 'Direction: "send" or "receive"'
remote_user:
  :cltype: :opt_with_arg
  :option_switch: "--user"
  :required: true
  :desc: Remote user. Default value is "xfer" on node or connect.
remote_host:
  :cltype: :opt_with_arg
  :option_switch: "--host"
  :required: true
  :desc: IP or fully qualified domain name of the remote server
ssh_port:
  :cltype: :opt_with_arg
  :option_switch: "-P"
  :accepted_types: :int
  :desc: "Specifies ssh (TCP) port. Default: local:22, other:33001"
fasp_port:
  :cltype: :opt_with_arg
  :option_switch: "-O"
  :accepted_types: :int
  :default: 33001
  :desc: Specifies fasp (UDP) port.
dgram_size:
  :cltype: :opt_with_arg
  :option_switch: "-Z"
  :accepted_types: :int
  :desc: in bytes
target_rate_kbps:
  :cltype: :opt_with_arg
  :option_switch: "-l"
  :accepted_types: :int
  :desc: Specifies desired speed for the transfer.
min_rate_kbps:
  :cltype: :opt_with_arg
  :option_switch: "-m"
  :accepted_types: :int
  :default: 0
  :desc: Set the minimum transfer rate in kilobits per second.
rate_policy:
  :cltype: :opt_with_arg
  :option_switch: "--policy"
  :desc: Valid literals include "low","fair","high" and "fixed".
http_fallback:
  :cltype: :opt_with_arg
  :option_switch: "-y"
  :accepted_types:
  - :string
  - :bool
  :translate_values:
    force: F
    true: 1
    false: 0
  :desc: When true(1), attempts to perform an HTTP transfer if a fasp transfer cannot
    be performed.
http_fallback_port:
  :cltype: :opt_with_arg
  :option_switch: "-t"
  :accepted_types: :int
  :context:
  - :local
  :desc: Specifies http port.
source_root:
  :cltype: :opt_with_arg
  :option_switch: "--source-prefix64"
  :encode: Aspera::Fasp::Parameters
  :desc: "Path to be prepended to each source path.\n
This is either a conventional path or it can be a URI but only if there is no root defined."
sshfp:
  :cltype: :opt_with_arg
  :option_switch: "--check-sshfp"
  :desc: Check it against server SSH host key fingerprint
symlink_policy:
  :cltype: :opt_with_arg
  :option_switch: "--symbolic-links"
  :default: follow
  :desc: "Handle source side symbolic links by:\n
following the link (follow),\n
copying the link itself (copy),\n
skipping (skip),\n
or forcibly copying the link itself (copy+force).\n
values: copy, follow, copy+force, skip.\n
Default: follow"
overwrite:
  :cltype: :opt_with_arg
  :default: diff
  :desc: "Overwrite destination files with the source files of the same name.\n
  never, always, diff, older, or diff+older"
exclude_newer_than:
  :cltype: :opt_with_arg
  :accepted_types: :int
  :context:
  - :local
  :desc: skip src files with mtime > arg
exclude_older_than:
  :cltype: :opt_with_arg
  :accepted_types: :int
  :context:
  - :local
  :desc: skip src files with mtime < arg
preserve_acls:
  :cltype: :opt_with_arg
  :context:
  - :local
  :desc: "-"
move_after_transfer:
  :cltype: :opt_with_arg
multi_session_threshold:
  :cltype: :opt_with_arg
  :accepted_types: :int
  :context:
  - :local
  - :node
  :desc: in bytes
EX_fasp_proxy_url:
  :cltype: :opt_with_arg
  :option_switch: "--proxy"
  :context:
  - :local
  :desc: "Specify the address of the Aspera high-speed proxy server.\n
dnat(s)://[user[:password]@]server:port\n
Default ports for DNAT and DNATS protocols are 9091 and 9092.\n
Password, if specified here, overrides the value of environment variable ASPERA_PROXY_PASS."
EX_http_proxy_url:
  :cltype: :opt_with_arg
  :option_switch: "-x"
  :context:
  - :local
  :desc: Specify the proxy server address used by HTTP Fallback
EX_ssh_key_paths:
  :cltype: :opt_with_arg
  :option_switch: "-i"
  :accepted_types: :array
  :context:
  - :local
  :desc: Use public key authentication for SSH and specify the private key file paths
EX_http_transfer_jpeg:
  :cltype: :opt_with_arg
  :option_switch: "-j"
  :accepted_types: :int
  :default: '0'
  :context:
  - :local
  :desc: HTTP transfers as JPEG file
EX_no_read:
  :cltype: :opt_without_arg
  :option_switch: "--no-read"
  :context:
  - :local
  :desc: no read source
EX_no_write:
  :cltype: :opt_without_arg
  :option_switch: "--no-write"
  :context:
  - :local
  :desc: no write on destination
EX_apply_local_docroot:
  :cltype: :opt_without_arg
  :option_switch: "--apply-local-docroot"
target_rate_cap_kbps:
  :cltype: :ignore
  :accepted_types: :int
  :context:
  - :connect
  :desc: Returned by upload/download_setup node api.
target_rate_percentage:
  :cltype: :ignore
min_rate_cap_kbps:
  :cltype: :ignore
  :accepted_types: :int
rate_policy_allowed:
  :cltype: :ignore
  :context:
  - :connect
  :desc: "Specifies most aggressive rate policy that is allowed.\n
  Returned by node API.
  low, fair, high, fixed"
fasp_url:
  :cltype: :ignore
  :context:
  - :unknown
lock_rate_policy:
  :cltype: :ignore
  :accepted_types: :bool
lock_min_rate:
  :cltype: :ignore
  :accepted_types: :bool
lock_target_rate:
  :cltype: :ignore
  :accepted_types: :bool
authentication:
  :cltype: :ignore
  :context:
  - :connect
  :desc: 'value=token for SSH bypass keys, else password asked if not provided.'
https_fallback_port:
  :cltype: :ignore
  :accepted_types: :int
  :desc: Specifies https port.
content_protection:
  :cltype: :ignore
  :option_switch: "--file-crypt"
  :enum:
  - encrypt
  - decrypt
  :desc: encryption at rest
cipher_allowed:
  :cltype: :ignore
  :desc: returned by node API. Valid literals include "aes-128" and "none".
multi_session:
  :cltype: :ignore
  :option_switch: "-C"
  :accepted_types: :int
  :desc: "Use multi-session transfer. max 128.\n
Each participant on one host needs an independent UDP (-O) port.\n
Large files are split between sessions only when transferring with resume_policy=none."
obfuscate_file_names:
  :cltype: :ignore
  :accepted_types: :bool
  :context:
  - :unknown
tags:
  :cltype: :opt_with_arg
  :option_switch: "--tags64"
  :accepted_types: :hash
  :encode: Aspera::Fasp::Parameters
  :desc: Metadata for transfer
use_ascp4:
  :cltype: :defer
  :accepted_types: :bool
  :default: false
  :context:
  - :local
  - :node
  :desc: specify version of protocol
paths:
  :cltype: :defer
  :accepted_types: :array
  :desc: Required. Contains a path to the source (required) and a path to the destination.
EX_file_list:
  :cltype: :defer
  :option_switch: "--file-list"
  :context:
  - :local
  :desc: source file list
EX_file_pair_list:
  :cltype: :defer
  :option_switch: "--file-pair-list"
  :context:
  - :local
  :desc: source file pair list
EX_ascp_args:
  :cltype: :defer
  :accepted_types: :array
  :context:
  - :local
  :desc: Add command line arguments to ascp
destination_root:
  :cltype: :defer
  :required: true
  :desc: Destination root directory.
wss_enabled:
  :cltype: :defer
  :accepted_types: :bool
wss_port:
  :cltype: :defer
  :accepted_types: :int
title:
  :accepted_types: :string
  :context:
  - :node
  - :connect
  :desc: Title of the transfer
remote_access_key:
  :accepted_types: :string
  :desc: Node only?
content_protection_password:
  :accepted_types: :string
  :desc: "Specifies a string password. (var: ASPERA_SCP_PASS)"
retry_duration:
  :accepted_types: :string
  :context:
  - :node
  - :connect
  :desc: Specifies how long to wait before retrying transfer. (e.g. "5min")
delete_source:
  :accepted_types: :bool
  :context:
  - :node
  :desc: Remove SRC files after transfer success
compression:
  :accepted_types: :int
  :context:
  - :unknown
  :desc: ascp4 only, 0 / 1?
read_threads:
  :accepted_types: :int
  :context:
  - :unknown
  :desc: ascp4 only
write_threads:
  :accepted_types: :int
  :context:
  - :unknown
  :desc: ascp4 only
