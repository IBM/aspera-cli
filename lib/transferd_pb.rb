# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transferd.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("transferd.proto", :syntax => :proto3) do
    add_message "transferd.api.Error" do
      optional :code, :int32, 1
      optional :description, :string, 2
    end
    add_message "transferd.api.APIVersionRequest" do
    end
    add_message "transferd.api.APIVersionResponse" do
      repeated :supportedVersions, :string, 1
    end
    add_message "transferd.api.RetryStrategy" do
      oneof :retryType do
        optional :basic, :message, 1, "transferd.api.BasicRetryStrategy"
        optional :backoff, :message, 2, "transferd.api.ExponentialBackoffRetryStrategy"
      end
    end
    add_message "transferd.api.BasicRetryStrategy" do
      optional :maxCount, :int64, 1
      optional :retryInterval, :int64, 2
    end
    add_message "transferd.api.ExponentialBackoffRetryStrategy" do
      optional :maxAttempts, :int64, 1
      optional :multiplier, :int64, 2
      optional :initialDelay, :int64, 3
      optional :maxDelay, :int64, 4
    end
    add_message "transferd.api.TransferConfig" do
      optional :retry, :message, 1, "transferd.api.RetryStrategy"
      optional :license, :string, 2
      optional :localLog, :string, 3
      optional :remoteLog, :string, 4
      optional :logLevel, :sfixed32, 5
      optional :asperaConf, :string, 6
    end
    add_message "transferd.api.TransferRange" do
      optional :offset, :int64, 1
      optional :length, :int64, 2
    end
    add_message "transferd.api.TransferRequest" do
      optional :transferType, :enum, 1, "transferd.api.TransferType"
      optional :config, :message, 2, "transferd.api.TransferConfig"
      optional :transferSpec, :string, 3
    end
    add_message "transferd.api.StartTransferResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :title, :string, 3
      optional :transferType, :enum, 4, "transferd.api.TransferType"
      optional :status, :enum, 5, "transferd.api.TransferStatus"
      optional :error, :message, 6, "transferd.api.Error"
    end
    add_message "transferd.api.TransferInfoRequest" do
      optional :transferId, :string, 1
    end
    add_message "transferd.api.TransferResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :title, :string, 3
      optional :transferType, :enum, 4, "transferd.api.TransferType"
      optional :status, :enum, 5, "transferd.api.TransferStatus"
      optional :error, :message, 6, "transferd.api.Error"
      optional :transferEvent, :enum, 7, "transferd.api.TransferEvent"
      optional :transferInfo, :message, 8, "transferd.api.TransferInfo"
      optional :message, :string, 9
      optional :sessionInfo, :message, 10, "transferd.api.SessionTransferInformation"
      optional :fileInfo, :message, 11, "transferd.api.FileTransferInformation"
    end
    add_message "transferd.api.QueryTransferResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :title, :string, 3
      optional :transferType, :enum, 4, "transferd.api.TransferType"
      optional :status, :enum, 5, "transferd.api.TransferStatus"
      optional :error, :message, 6, "transferd.api.Error"
      optional :transferInfo, :message, 7, "transferd.api.TransferInfo"
      optional :message, :string, 8
    end
    add_message "transferd.api.TransferInfo" do
      optional :averageRateKbps, :int64, 1
      optional :bytesLost, :int64, 2
      optional :bytesTransferred, :int64, 3
      optional :bytesWritten, :int64, 4
      optional :directoriesCompleted, :int64, 5
      optional :startTimeUsec, :int64, 6
      optional :elapsedUsec, :int64, 7
      optional :endTimeUsec, :int64, 8
      optional :errorCode, :string, 9
      optional :errorDescription, :string, 10
      optional :filesCompleted, :int64, 11
      optional :targetRateKbps, :int64, 12
      optional :minRateKbps, :int64, 13
      optional :argTransfersAttempted, :int64, 14
      optional :argTransfersPassed, :int64, 15
      optional :argTransfersSkipped, :int64, 16
      optional :argTransfersFailed, :int64, 17
      optional :fileChecksumType, :string, 18
      optional :cookie, :string, 19
      optional :direction, :string, 20
      optional :operation, :string, 21
      optional :tags64, :string, 22
    end
    add_message "transferd.api.SessionTransferInformation" do
      optional :id, :string, 1
      optional :sessionId, :string, 2
      optional :user, :string, 3
      optional :clientUser, :string, 4
      optional :clientNodeId, :string, 5
      optional :clientClusterId, :string, 6
      optional :serverNodeId, :string, 7
      optional :serverClusterId, :string, 8
      optional :clientIPAddress, :string, 9
      optional :serverIPAddress, :string, 10
      optional :port, :int64, 11
      optional :tcpPort, :int64, 12
      optional :status, :string, 13
      optional :startTimeUsec, :int64, 14
      optional :endTimeUsec, :int64, 15
      optional :elapsedUsec, :int64, 16
      optional :bytesTransferred, :int64, 17
      optional :bytesWritten, :int64, 18
      optional :bytesLost, :int64, 19
      optional :filesCompleted, :int64, 20
      optional :filesFailed, :int64, 21
      optional :filesSkipped, :int64, 22
      optional :directoriesCompleted, :int64, 23
      optional :targetRateKbps, :int64, 24
      optional :minRateKbps, :int64, 25
      optional :calcRateKbps, :int64, 26
      optional :networkDelayUsec, :int64, 27
      optional :errorCode, :int64, 28
      optional :errorDesc, :string, 29
      optional :manifestFilePath, :string, 30
      optional :sourcePathsScanExcluded, :int64, 31
      optional :sourcePathsScanIrregular, :int64, 32
      optional :sourcePathsScanFailed, :int64, 33
      optional :sourcePathsScanAttempted, :int64, 34
      optional :transfersSkipped, :int64, 35
      optional :transfersPassed, :int64, 36
      optional :transfersFailed, :int64, 37
      optional :transfersAttempted, :int64, 38
      optional :cookie, :string, 39
      optional :direction, :string, 40
      optional :fileChecksumType, :string, 41
      optional :operation, :string, 42
      optional :tags, :string, 43
      optional :argTransfersAttempted, :int64, 44
      optional :argTransfersPassed, :int64, 45
      optional :argTransfersSkipped, :int64, 46
      optional :argTransfersFailed, :int64, 47
      optional :encryption, :string, 48
      optional :adaptive, :string, 49
      optional :remote, :string, 50
      optional :destination, :string, 51
      optional :priority, :int64, 52
      optional :transferId, :string, 53
      optional :rateCap, :int64, 54
      optional :minRateCap, :int64, 55
      optional :policyCap, :string, 56
      optional :rateLock, :string, 57
      optional :minRateLock, :string, 58
      optional :policyLock, :string, 59
      optional :serverHostname, :string, 60
      optional :remoteAddress, :string, 61
      optional :cipher, :string, 62
      optional :resumePolicy, :string, 63
      optional :createPolicy, :int64, 64
      optional :manifestPolicy, :string, 65
      optional :precalc, :string, 66
      optional :overwritePolicy, :string, 67
      optional :rttAutocorrect, :string, 68
      optional :timePolicy, :int64, 69
      optional :manifestInprogress, :string, 70
      optional :filesEncrypt, :string, 71
      optional :filesDecrypt, :string, 72
      optional :datagramSize, :int64, 73
      optional :vLinkVersion, :int64, 74
      optional :peerVLinkVersion, :int64, 75
      optional :vLinkLocalEnabled, :string, 76
      optional :vLinkRemoteEnabled, :string, 77
      optional :readBlockSize, :int64, 78
      optional :writeBlockSize, :int64, 79
      optional :clusterNumNodes, :int64, 80
      optional :clusterNodeId, :int64, 81
      optional :moveRange, :string, 82
      optional :keepalive, :string, 83
      optional :testLogin, :string, 84
      optional :useProxy, :string, 85
      optional :rateControlAlgorithm, :string, 86
      optional :pmtu, :int64, 87
      optional :preTransferFiles, :int64, 88
      optional :preTransferBytes, :int64, 89
      optional :preTransferDirs, :int64, 90
      optional :preTransferSpecial, :int64, 91
      optional :sourcePathsScanCompleted, :int64, 92
      optional :argScansAttempted, :int64, 93
      optional :argScansCompleted, :int64, 94
      optional :argFaspFileArgIndex, :int64, 95
      optional :dirCreatesAttempted, :int64, 96
      optional :dirCreatesFailed, :int64, 97
      optional :dirCreatesPassed, :int64, 98
      optional :dirScansCompleted, :int64, 99
    end
    add_message "transferd.api.FileTransferInformation" do
      optional :fileId, :string, 1
      optional :path, :string, 2
      optional :startTimeUsec, :int64, 3
      optional :elapsedUsec, :int64, 4
      optional :status, :string, 5
      optional :errorCode, :int64, 6
      optional :errorDescription, :string, 7
      optional :size, :int64, 9
      optional :fileType, :string, 10
      optional :fileChecksumType, :string, 11
      optional :checksum, :string, 12
      optional :startByte, :int64, 13
      optional :bytesWritten, :int64, 14
      optional :bytesContiguous, :int64, 15
      optional :sessionId, :string, 16
      optional :faspFileArgIndex, :int64, 17
    end
    add_message "transferd.api.TransferModificationRequest" do
      optional :transferId, :string, 1
      optional :transferSpec, :string, 2
    end
    add_message "transferd.api.TransferModificationResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :status, :enum, 3, "transferd.api.TransferStatus"
      optional :error, :message, 4, "transferd.api.Error"
    end
    add_message "transferd.api.TransferPathRequest" do
      optional :transferId, :string, 1
      repeated :transferPath, :message, 2, "transferd.api.TransferPath"
    end
    add_message "transferd.api.TransferPath" do
      optional :source, :string, 1
      optional :destination, :string, 2
      optional :range, :message, 3, "transferd.api.TransferRange"
    end
    add_message "transferd.api.TransferPathResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.LockPersistentTransferRequest" do
      optional :transferId, :string, 1
    end
    add_message "transferd.api.LockPersistentTransferResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.RegistrationRequest" do
      repeated :transferId, :string, 1
      repeated :filters, :message, 2, "transferd.api.RegistrationFilter"
    end
    add_message "transferd.api.RegistrationFilter" do
      optional :operator, :enum, 1, "transferd.api.RegistrationFilterOperator"
      repeated :eventType, :enum, 2, "transferd.api.TransferEvent"
      repeated :transferId, :string, 3
      repeated :cookie, :string, 4
      repeated :tags64, :string, 5
      optional :direction, :string, 6
      optional :cookieRegex, :string, 7
      repeated :transferType, :enum, 8, "transferd.api.TransferType"
      repeated :transferStatus, :enum, 9, "transferd.api.TransferStatus"
    end
    add_message "transferd.api.StopTransferRequest" do
      repeated :transferId, :string, 1
      optional :delay, :int64, 2
    end
    add_message "transferd.api.StopTransferResponse" do
      optional :apiVersion, :string, 1
      repeated :stopResult, :message, 2, "transferd.api.StopInfo"
    end
    add_message "transferd.api.StopInfo" do
      optional :transferId, :string, 1
      optional :stopped, :bool, 2
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.InstanceInfoRequest" do
    end
    add_message "transferd.api.InstanceInfoResponse" do
      optional :apiVersion, :string, 1
      optional :info, :message, 2, "transferd.api.InstanceInfo"
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.InstanceInfo" do
      optional :managementPort, :int64, 1
      repeated :asperaInfo, :message, 2, "transferd.api.AsperaInfo"
      optional :licenseInfo, :message, 3, "transferd.api.LicenseInfo"
      optional :promiscuousMode, :bool, 4
    end
    add_message "transferd.api.LicenseInfo" do
      optional :maxRate, :string, 1
      optional :accountNumber, :string, 2
      optional :licenseNumber, :string, 3
      optional :license, :string, 4
    end
    add_message "transferd.api.AsperaInfo" do
      optional :asperaBinary, :string, 1
      optional :asperaVersion, :string, 2
      optional :operatingSystem, :string, 3
      optional :error, :message, 4, "transferd.api.Error"
    end
    add_message "transferd.api.PeerCheckRequest" do
      optional :transferSpec, :string, 1
    end
    add_message "transferd.api.PeerCheckResponse" do
      optional :apiVersion, :string, 1
      optional :reachable, :bool, 2
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.WriteStreamChunkRequest" do
      optional :transferId, :string, 1
      optional :path, :string, 2
      optional :range, :message, 3, "transferd.api.TransferRange"
      optional :chunk, :message, 4, "transferd.api.Chunk"
    end
    add_message "transferd.api.WriteStreamChunkResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.WriteStreamRequest" do
      optional :transferId, :string, 1
      optional :path, :string, 2
      optional :size, :int64, 3
      optional :chunk, :message, 4, "transferd.api.Chunk"
    end
    add_message "transferd.api.WriteStreamResponse" do
      optional :apiVersion, :string, 1
      optional :transferId, :string, 2
      optional :error, :message, 3, "transferd.api.Error"
    end
    add_message "transferd.api.ReadStreamRequest" do
      optional :transferId, :string, 1
    end
    add_message "transferd.api.ReadStreamResponse" do
      optional :apiVersion, :string, 1
      optional :path, :string, 2
      optional :pathSize, :int64, 3
      optional :chunk, :message, 4, "transferd.api.Chunk"
      optional :error, :message, 5, "transferd.api.Error"
    end
    add_message "transferd.api.Chunk" do
      optional :contents, :bytes, 1
    end
    add_message "transferd.api.ValidationRequest" do
      optional :transferSpec, :string, 1
      optional :transferType, :enum, 2, "transferd.api.TransferType"
    end
    add_message "transferd.api.ValidationResponse" do
      optional :apiVersion, :string, 1
      optional :valid, :bool, 2
      optional :validatorVersion, :string, 3
      repeated :unknownField, :string, 4
      optional :error, :message, 5, "transferd.api.Error"
    end
    add_message "transferd.api.TransferSpecV1" do
      optional :cipher, :string, 1
      optional :content_protection, :string, 2
      optional :content_protection_password, :string, 3
      optional :cookie, :string, 4
      optional :create_dir, :bool, 5
      optional :delete_before_transfer, :bool, 6
      optional :delete_source, :bool, 7
      optional :destination_root_id, :string, 8
      optional :direction, :string, 9
      optional :exclude_newer_than, :string, 10
      optional :exclude_older_than, :string, 11
      optional :fasp_port, :int64, 12
      optional :http_fallback, :bool, 13
      optional :http_fallback_port, :int64, 14
      optional :https_fallback_port, :int64, 15
      optional :move_after_transfer, :string, 16
      optional :multi_session, :int64, 17
      optional :multi_session_threshold, :int64, 18
      optional :overwrite, :string, 19
      repeated :paths, :message, 20, "transferd.api.Path"
      optional :precalculate_job_size, :bool, 21
      optional :preserve_access_time, :bool, 22
      optional :preserve_creation_time, :bool, 23
      optional :preserve_modification_time, :bool, 24
      optional :preserve_times, :bool, 25
      optional :rate_policy, :string, 26
      optional :remote_access_key, :string, 27
      optional :remote_host, :string, 28
      optional :remote_password, :string, 29
      optional :remote_user, :string, 30
      optional :remove_after_transfer, :bool, 31
      optional :remove_empty_directories, :bool, 32
      optional :resume_policy, :string, 33
      optional :retry_duration, :int64, 34
      optional :source_root_id, :string, 35
      optional :ssh_port, :int64, 36
      optional :ssh_private_key, :string, 37
      optional :ssh_private_key_passphrase, :string, 38
      optional :symlink_policy, :string, 39
      optional :tags, :string, 40
      optional :tags64, :string, 41
      optional :target_rate_cap_kbps, :int64, 42
      optional :target_rate_kbps, :int64, 43
      optional :title, :string, 44
      optional :token, :string, 45
      optional :use_ascp4, :bool, 46
      optional :fasp_proxy, :message, 47, "transferd.api.FASPProxy"
      optional :destination_root, :string, 48
      optional :source_root, :string, 49
      optional :min_rate_cap_kbps, :int64, 50
      optional :lock_rate_policy, :bool, 51
      optional :lock_target_rate_kbps, :bool, 52
      optional :lock_min_rate_kbps, :bool, 53
      optional :src_base64, :string, 54
      optional :icos, :message, 55, "transferd.api.ICOSSpec"
      optional :node_api, :message, 56, "transferd.api.NodeAPISpec"
      optional :apply_local_docroot, :bool, 57
      optional :preserve_acls, :string, 58
      optional :preserve_remote_acls, :string, 59
      optional :preserve_file_owner_uid, :bool, 60
      optional :preserve_file_owner_gid, :bool, 61
      optional :preserve_extended_attrs, :string, 62
      optional :preserve_remote_extended_attrs, :string, 63
      optional :preserve_source_access_time, :bool, 64
      optional :remove_empty_source_dir, :bool, 65
      optional :save_before_overwrite, :bool, 66
      optional :skip_duplicate_check, :bool, 67
      optional :skip_special_files, :bool, 68
      optional :ssh_private_key_path, :string, 69
    end
    add_message "transferd.api.Path" do
      optional :source, :string, 1
      optional :destination, :string, 2
    end
    add_message "transferd.api.FASPProxy" do
      optional :url, :string, 1
      optional :username, :string, 2
      optional :password, :string, 3
    end
    add_message "transferd.api.TransferSpecV2" do
      optional :session_initiation, :message, 1, "transferd.api.Initiation"
      optional :security, :message, 2, "transferd.api.Security"
      optional :tracking, :message, 3, "transferd.api.Tracking"
      optional :file_system, :message, 4, "transferd.api.Filesystem"
      optional :transport, :message, 5, "transferd.api.Transport"
      optional :assets, :message, 6, "transferd.api.Assets"
      optional :direction, :string, 7
      optional :remote_host, :string, 8
      optional :title, :string, 9
    end
    add_message "transferd.api.Initiation" do
      optional :ssh, :message, 1, "transferd.api.SSHSpec"
      optional :icos, :message, 2, "transferd.api.ICOSSpec"
      optional :node_api, :message, 3, "transferd.api.NodeAPISpec"
    end
    add_message "transferd.api.SSHSpec" do
      optional :ssh_port, :int64, 1
      optional :remote_password, :string, 2
      optional :remote_user, :string, 3
      optional :ssh_private_key, :string, 4
      optional :ssh_private_key_passphrase, :string, 5
      optional :ssh_fingerprint, :string, 6
      optional :ssh_private_key_path, :string, 7
    end
    add_message "transferd.api.ICOSSpec" do
      optional :api_key, :string, 1
      optional :bucket, :string, 2
      optional :ibm_service_instance_id, :string, 3
      optional :ibm_service_endpoint, :string, 4
    end
    add_message "transferd.api.NodeAPIHeaderSpec" do
      optional :key, :string, 1
      optional :value, :string, 2
    end
    add_message "transferd.api.NodeAPISpec" do
      optional :url, :string, 1
      repeated :headers, :message, 2, "transferd.api.NodeAPIHeaderSpec"
    end
    add_message "transferd.api.Security" do
      optional :content_protection_password, :string, 1
      optional :remote_access_key, :string, 2
      optional :token, :string, 3
      optional :cipher, :string, 4
    end
    add_message "transferd.api.Tracking" do
      optional :cookie, :string, 1
      optional :tags, :string, 2
      optional :tags64, :string, 3
    end
    add_message "transferd.api.Filesystem" do
      optional :create_dir, :bool, 1
      optional :delete_before_transfer, :bool, 2
      optional :exclude_newer_than, :string, 3
      optional :exclude_older_than, :string, 4
      optional :move_after_transfer, :string, 5
      optional :overwrite, :string, 6
      optional :precalculate_job_size, :bool, 7
      optional :preserve_access_time, :bool, 8
      optional :preserve_creation_time, :bool, 9
      optional :preserve_modification_time, :bool, 10
      optional :preserve_times, :bool, 11
      optional :remove_after_transfer, :bool, 12
      optional :remove_empty_directories, :bool, 13
      optional :resume_policy, :string, 14
      optional :symlink_policy, :string, 15
      optional :checksum_type, :string, 16
      optional :src_base64, :string, 17
      repeated :inclusion_patterns, :message, 18, "transferd.api.PathPattern"
      repeated :exclusion_patterns, :message, 19, "transferd.api.PathPattern"
      optional :apply_local_docroot, :bool, 20
      optional :preserve_acls, :string, 21
      optional :preserve_remote_acls, :string, 22
      optional :preserve_file_owner_uid, :bool, 23
      optional :preserve_file_owner_gid, :bool, 24
      optional :preserve_extended_attrs, :string, 25
      optional :preserve_remote_extended_attrs, :string, 26
      optional :preserve_source_access_time, :bool, 27
      optional :remove_empty_source_dir, :bool, 28
      optional :save_before_overwrite, :bool, 29
      optional :skip_duplicate_check, :bool, 30
      optional :skip_special_files, :bool, 31
    end
    add_message "transferd.api.Transport" do
      optional :fasp_port, :int64, 1
      optional :http_fallback, :message, 2, "transferd.api.HTTPFallback"
      optional :fasp_proxy, :message, 3, "transferd.api.FASPProxy"
      optional :streaming, :message, 4, "transferd.api.Streaming"
      optional :multi_session, :message, 5, "transferd.api.MultiSession"
      optional :multi_session_threshold, :int64, 6
      optional :rate_policy, :string, 7
      optional :lock_rate_policy, :bool, 8
      optional :target_rate_cap_kbps, :int64, 9
      optional :target_rate_kbps, :int64, 10
      optional :min_rate_cap_kbps, :int64, 11
      optional :min_rate_kbps, :int64, 12
      optional :lock_target_rate_kbps, :bool, 13
      optional :lock_min_rate_kbps, :bool, 14
      optional :use_ascp4, :bool, 15
    end
    add_message "transferd.api.Assets" do
      optional :destination_root_id, :string, 1
      optional :source_root_id, :string, 2
      optional :destination_root, :string, 3
      optional :source_root, :string, 4
      repeated :paths, :message, 5, "transferd.api.Path"
    end
    add_message "transferd.api.PathPattern" do
      optional :pattern, :string, 1
    end
    add_message "transferd.api.HTTPFallback" do
      optional :port, :int64, 1
      optional :proxy, :string, 2
    end
    add_message "transferd.api.Streaming" do
      optional :chunk_size, :int64, 1
      optional :local_memory, :int64, 2
      optional :remote_memory, :int64, 3
      optional :sparse_file, :bool, 4
      optional :compression, :message, 5, "transferd.api.Compression"
    end
    add_message "transferd.api.Compression" do
      optional :method, :string, 1
      optional :hint, :int32, 2
    end
    add_message "transferd.api.MultiSession" do
      optional :enable, :bool, 1
      optional :number_of_sessions, :int32, 2
      optional :hosts, :message, 3, "transferd.api.MultiSessionHosts"
      optional :file_splitting, :message, 4, "transferd.api.MultiSessionFileSplitting"
      optional :bandwidth, :message, 5, "transferd.api.MultiSessionBandwidth"
    end
    add_message "transferd.api.MultiSessionHosts" do
      optional :usedns, :bool, 1
      repeated :hosts, :string, 2
    end
    add_message "transferd.api.MultiSessionFileSplitting" do
      optional :size_kb_threshold, :int32, 1
    end
    add_message "transferd.api.MultiSessionBandwidth" do
      optional :bandwidth_kpbs_threshold, :int32, 1
    end
    add_enum "transferd.api.TransferType" do
      value :UNKNOWN_TRANSFER_TYPE, 0
      value :FILE_REGULAR, 1
      value :FILE_PERSISTENT, 2
      value :URL_STREAM_TO_STREAM, 3
      value :FILE_TO_STREAM_DOWNLOAD, 4
      value :STREAM_TO_FILE_UPLOAD, 5
      value :PERSISTENT_STREAM_UPLOAD, 6
      value :ASYNC_SESSION, 7
    end
    add_enum "transferd.api.TransferStatus" do
      value :UNKNOWN_STATUS, 0
      value :QUEUED, 1
      value :RUNNING, 2
      value :COMPLETED, 3
      value :FAILED, 4
      value :CANCELED, 5
      value :PAUSED, 6
      value :ORPHANED, 7
    end
    add_enum "transferd.api.TransferEvent" do
      value :UNKNOWN_EVENT, 0
      value :SESSION_START, 1
      value :SESSION_STOP, 2
      value :SESSION_ERROR, 3
      value :FILE_START, 4
      value :FILE_STOP, 5
      value :FILE_ERROR, 6
      value :ARG_STOP, 7
      value :PROGRESS, 8
      value :CONNECTING, 9
      value :RATE_MODIFICATION, 10
      value :FILE_SKIP, 11
      value :BANDWIDTH_MEASUREMENT, 12
      value :SESSION_CANCELED, 13
    end
    add_enum "transferd.api.RegistrationFilterOperator" do
      value :OR, 0
      value :AND, 1
    end
  end
end

module Transferd
  module Api
    Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Error").msgclass
    APIVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.APIVersionRequest").msgclass
    APIVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.APIVersionResponse").msgclass
    RetryStrategy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.RetryStrategy").msgclass
    BasicRetryStrategy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.BasicRetryStrategy").msgclass
    ExponentialBackoffRetryStrategy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.ExponentialBackoffRetryStrategy").msgclass
    TransferConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferConfig").msgclass
    TransferRange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferRange").msgclass
    TransferRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferRequest").msgclass
    StartTransferResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.StartTransferResponse").msgclass
    TransferInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferInfoRequest").msgclass
    TransferResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferResponse").msgclass
    QueryTransferResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.QueryTransferResponse").msgclass
    TransferInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferInfo").msgclass
    SessionTransferInformation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.SessionTransferInformation").msgclass
    FileTransferInformation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.FileTransferInformation").msgclass
    TransferModificationRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferModificationRequest").msgclass
    TransferModificationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferModificationResponse").msgclass
    TransferPathRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferPathRequest").msgclass
    TransferPath = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferPath").msgclass
    TransferPathResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferPathResponse").msgclass
    LockPersistentTransferRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.LockPersistentTransferRequest").msgclass
    LockPersistentTransferResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.LockPersistentTransferResponse").msgclass
    RegistrationRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.RegistrationRequest").msgclass
    RegistrationFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.RegistrationFilter").msgclass
    StopTransferRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.StopTransferRequest").msgclass
    StopTransferResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.StopTransferResponse").msgclass
    StopInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.StopInfo").msgclass
    InstanceInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.InstanceInfoRequest").msgclass
    InstanceInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.InstanceInfoResponse").msgclass
    InstanceInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.InstanceInfo").msgclass
    LicenseInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.LicenseInfo").msgclass
    AsperaInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.AsperaInfo").msgclass
    PeerCheckRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.PeerCheckRequest").msgclass
    PeerCheckResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.PeerCheckResponse").msgclass
    WriteStreamChunkRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.WriteStreamChunkRequest").msgclass
    WriteStreamChunkResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.WriteStreamChunkResponse").msgclass
    WriteStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.WriteStreamRequest").msgclass
    WriteStreamResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.WriteStreamResponse").msgclass
    ReadStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.ReadStreamRequest").msgclass
    ReadStreamResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.ReadStreamResponse").msgclass
    Chunk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Chunk").msgclass
    ValidationRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.ValidationRequest").msgclass
    ValidationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.ValidationResponse").msgclass
    TransferSpecV1 = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferSpecV1").msgclass
    Path = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Path").msgclass
    FASPProxy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.FASPProxy").msgclass
    TransferSpecV2 = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferSpecV2").msgclass
    Initiation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Initiation").msgclass
    SSHSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.SSHSpec").msgclass
    ICOSSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.ICOSSpec").msgclass
    NodeAPIHeaderSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.NodeAPIHeaderSpec").msgclass
    NodeAPISpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.NodeAPISpec").msgclass
    Security = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Security").msgclass
    Tracking = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Tracking").msgclass
    Filesystem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Filesystem").msgclass
    Transport = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Transport").msgclass
    Assets = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Assets").msgclass
    PathPattern = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.PathPattern").msgclass
    HTTPFallback = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.HTTPFallback").msgclass
    Streaming = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Streaming").msgclass
    Compression = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.Compression").msgclass
    MultiSession = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.MultiSession").msgclass
    MultiSessionHosts = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.MultiSessionHosts").msgclass
    MultiSessionFileSplitting = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.MultiSessionFileSplitting").msgclass
    MultiSessionBandwidth = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.MultiSessionBandwidth").msgclass
    TransferType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferType").enummodule
    TransferStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferStatus").enummodule
    TransferEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.TransferEvent").enummodule
    RegistrationFilterOperator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("transferd.api.RegistrationFilterOperator").enummodule
  end
end
